"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.encode = exports.stringify = void 0;
function stringify(data, params) {
    const { delimiter = '=', blankLine = true, spaceBefore = false, spaceAfter = false, } = Object.assign({}, params);
    const chunks = [];
    const formatPare = (key, val) => {
        let result = key;
        if (spaceBefore) {
            result += ' ';
        }
        result += delimiter;
        if (spaceAfter) {
            result += ' ';
        }
        result += val;
        return result;
    };
    let sectionKeys = null;
    let curKeyId = 0;
    for (const key of Object.keys(data)) {
        while (!sectionKeys || (sectionKeys.length !== curKeyId)) {
            let curKey;
            if (sectionKeys) {
                curKey = sectionKeys[curKeyId];
                curKeyId += 1;
            }
            else {
                curKey = key;
            }
            const val = (sectionKeys) ? data[key][curKey] : data[curKey];
            const valType = typeof val;
            if (['boolean', 'string', 'number'].includes(valType)) {
                chunks.push(formatPare(curKey, val.toString()));
                if (!sectionKeys) {
                    break;
                }
            }
            else if (typeof val === 'object') {
                if (sectionKeys) {
                    throw new Error('too much nesting');
                }
                if (blankLine) {
                    chunks.push('');
                }
                chunks.push(`[${key}]`);
                if (Array.isArray(val)) {
                    // is datasection
                    chunks.push(...val);
                    break;
                }
                else {
                    sectionKeys = Object.keys(val);
                }
            }
        }
        sectionKeys = null;
        curKeyId = 0;
    }
    return chunks.join('\n');
}
exports.stringify = stringify;
exports.encode = stringify;